#######################################################################################################################
####  MONKEY MANIFEST  ################################################################################################
#######################################################################################################################
##                                                                                                                   ##
##    The Monkey Manifest houses centralized configuration of automation profiles (monkeys).                         ##
##                                                                                                                   ##
##    Undefined props will default based on `storage/internal/defaults/monkey-config-defaults.yaml`.                 ##
##    Monkey props defined in your .env will override the framework defaults.                                        ##
##                                                                                                                   ##
#######################################################################################################################

#### GENERAL ***
##  WORK_PATH: The path to the work_path to use. (Absolute path; supports ~ on Mac/Linux)
##  SPECIAL_FILE: A file to be summarized using SUMMARY_PROMPT to give context for the main prompt. (absolute path)

#### PROMPTS ***
##  MAIN_PROMPT: The main prompt
##  SUMMARY_PROMPT: The prompt for summarizing the SPECIAL_FILE ("" to use verbatim SPECIAL_FILE contents)
##  MAIN_PROMPT_ULTIMATUM: A final ultimatum for the main prompt ("" for none)

#### MODELS ***
##  All models can be set to either 3 (gpt-3.5-turbo) or 4 (gpt-4).

#### TEMPS ***
##  All TEMPS (temperatures) can be set to a float between 0.0 (conservative) and 1.0 (creative)

#### OUTPUT ***
##  OUTPUT_EXAMPLE: An example of the output you want to see.
##  OUTPUT_CHECK_PROMPT: A prompt for checking the output.
##  OUTPUT_PATH: An alternate path (not WORK_PATH) for writing files
##  OUTPUT_FILENAME_APPEND: Optional string to append to output filenames
##  OUTPUT_EXT: Override output file extensions ("" for original ext, or ".md", ".txt", etc.)


###  YOUR MONKEYS
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##  Manually define monkey configs here or run `monk add-monkey <monkey-name>`.

'default':
  'MAIN_PROMPT': 'Please generate code for the following task...'
  'SUMMARY_PROMPT': 'Provide a summary of this code...'
  'MAIN_PROMPT_ULTIMATUM': ''
  'SPECIAL_FILE': 'special_file_generic.py'
  'MAIN_MODEL': !!int '4'
  'SUMMARY_MODEL': !!int '4'
  'MAIN_TEMP': !!int '1'
  'SUMMARY_TEMP': !!int '1'
  'WORK_PATH': '~/local-git/code-monkeys'
  'OUTPUT_PATH': ''
  'OUTPUT_EXT': ''
  'OUTPUT_FILENAME_APPEND': ''
  'OUTPUT_EXAMPLE': 'Limit your output strictly to the contents of the file, like
    this: ```complete contents of file```.'
  'OUTPUT_CHECK_PROMPT': 'Examine the following out put and determine if 1. The output
    is complete and 2. The output is limited strictly to the contents of a file. Format
    your response exactly like this: ```is_limited_to_file_contents:[1/0],is_complete:[1/0]```.'



###  SELF-HELP MONKEYS
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##  Monkeys that exist to work on the CodeMonkeys framework itself.

'self-extract':
  'MAIN_PROMPT': 'Please extract the following code into a new function...'
  'SUMMARY_PROMPT': 'Summarize this extracted code...'
  'MAIN_PROMPT_ULTIMATUM': ''
  'SPECIAL_FILE': 'special_file_extract.py'
  'MAIN_MODEL': !!int '4'
  'SUMMARY_MODEL': !!int '4'
  'MAIN_TEMP': !!int '1'
  'SUMMARY_TEMP': !!int '1'
  'WORK_PATH': '~/local-git/code-monkeys'
  'OUTPUT_PATH': ''
  'OUTPUT_EXT': ''
  'OUTPUT_FILENAME_APPEND': ''
  'OUTPUT_EXAMPLE': 'Limit your output strictly to the contents of the file, like
    this: ```complete contents of file```.'
  'OUTPUT_CHECK_PROMPT': ' Examine the following out put and determine if 1. The output
    is complete and 2. The output is limited strictly to the contents of a file. Format
    your response exactly like this: ```is_limited_to_file_contents:[1/0],is_complete:[1/0]```.'

'self-help':
  'MAIN_PROMPT': 'Write a python script that prints an appealing summary of the file and its usage,
    in the style of documentation for a CLI command. Your ultimate response should
    contain only the requested txt content.'
  'SUMMARY_PROMPT': 'The following is a summary of the monk command, which is used
    to run scripts in the CodeMonkeys project. Summarize it in a way that will give
    you adequate context for understanding any one script''s intention and usage in
    the context of the monk command.'
  'MAIN_PROMPT_ULTIMATUM': ''
  'SPECIAL_FILE': '~/local-git/code-monkeys/monk'
  'MAIN_MODEL': !!int '4'
  'SUMMARY_MODEL': !!int '4'
  'MAIN_TEMP': !!int '1'
  'SUMMARY_TEMP': !!int '1'
  'WORK_PATH': '~/local-git/code-monkeys'
  'OUTPUT_PATH': '~/local-git/code-monkeys/help'
  'OUTPUT_FILENAME_APPEND': ''
  'OUTPUT_EXT': '.txt'
  'OUTPUT_EXAMPLE': 'Limit your output strictly to the contents of the file, like
    this: ```complete contents of file```.'
  'OUTPUT_CHECK_PROMPT': 'Examine the following out put and determine if 1. The output
    is complete and 2. The output is limited strictly to the contents of a file. Format
    your response exactly like this: ```is_limited_to_file_contents:[1/0],is_complete:[1/0]```.'
