#######################################################################################################################
####  MONKEY MANIFEST  ################################################################################################
###                                                                                                                  ##
##    The Monkey Manifest houses centralized configuration of automation profiles (monkeys).                         ##
##                                                                                                                   ##
##    Undefined props will default based on `storage/internal/defaults/monkey-config-defaults.yaml`.                 ##
##    Monkey props defined in your .env will override the framework defaults.                                        ##
##                                                                                                                   ##
#######################################################################################################################

#### GENERAL ***
##  WORK_PATH: The path to the work_path to use. (Absolute path; supports ~ on Mac/Linux)
##  SPECIAL_FILE_PATH: A file to be summarized using SUMMARY_PROMPT to give context for the main prompt. (absolute path)

#### PROMPTS ***
##  MAIN_PROMPT: The main prompt
##  SUMMARY_PROMPT: The prompt for summarizing the SPECIAL_FILE_PATH ("" to use verbatim SPECIAL_FILE_PATH contents)
##  MAIN_PROMPT_ULTIMATUM: A final ultimatum for the main prompt ("" for none)

#### MODELS ***
##  MODEL props can be set to int 3 or 4 (gpt-3.5-turbo or gpt-4).

#### TEMPS ***
##  TEMP props can be floats from 0.0-1.0 (conservative-creative)

#### OUTPUT ***
##  OUTPUT_EXAMPLE_PROMPT: An example of the output you want to see.
##  OUTPUT_CHECK_PROMPT: A prompt for checking the output.
##  OUTPUT_PATH: An alternate path (not WORK_PATH) for writing files
##  OUTPUT_FILENAME_APPEND: Optional string to append to output filenames
##  OUTPUT_EXT: Override output file extensions ("" for original ext, or ".md", ".txt", etc.)



###  YOUR MONKEYS
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#  Manually define monkey configs here or move GENERATED MONKEYS from below.


'default':

  'MAIN_PROMPT': 'Please generate code for the following task...'
  'SUMMARY_PROMPT': 'Provide a summary of this code...'
  'MAIN_PROMPT_ULTIMATUM': ''
  'SPECIAL_FILE_PATH': '/Users/david/local-git/code-monkeys/self-help-special-file.md'
  'MAIN_MODEL': !!int '4'
  'SUMMARY_MODEL': !!int '4'
  'MAIN_TEMP': !!float '1.0'
  'SUMMARY_TEMP': !!float '1.0'
  'WORK_PATH': '~/local-git/code-monkeys'
#  'OUTPUT_PATH': ''
#  'OUTPUT_EXT': ''
#  'OUTPUT_FILENAME_APPEND': ''
  'OUTPUT_EXAMPLE_PROMPT': 'Limit your output strictly to the contents of the file, like
    this: ```complete contents of file```.'
  'OUTPUT_CHECK_PROMPT': 'Examine the following out put and determine if 1. The output
    is complete and 2. The output is limited strictly to the contents of a file. Format
    your response exactly like this: ```is_limited_to_file_contents:[1/0],is_complete:[1/0]```.'



###  GENERATED MONKEYS
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#  Generated monkeys will be written here when you run `monk add-monkey <monkey-name>`.
#  DO NOT ALTER THE START/END TAGS. Instead, move the monkey config to YOUR MONKEYS above.
#  TODO: Implement this in add-monkey, right now it just writes to the end of this file.


# [GENERATED_MONKEYS_START]
# [GENERATED_MONKEYS_END]



###  SELF-HELP MONKEYS
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#  Monkeys that exist to work on the CodeMonkeys framework itself.


'self-extract':

  'MAIN_PROMPT': 'Please extract the following code into a new function...'
  'SUMMARY_PROMPT': 'Summarize this extracted code...'
  'MAIN_PROMPT_ULTIMATUM': ''
  'SPECIAL_FILE_PATH': '/Users/david/local-git/code-monkeys/self-help-special-file.md'
  'MAIN_MODEL': !!int '4'
  'SUMMARY_MODEL': !!int '4'
  'MAIN_TEMP': !!float '1.0'
  'SUMMARY_TEMP': !!float '1.0'
#  'WORK_PATH': '~/local-git/code-monkeys'
#  'OUTPUT_PATH': ''
#  'OUTPUT_EXT': ''
#  'OUTPUT_FILENAME_APPEND': ''
  'OUTPUT_EXAMPLE_PROMPT': 'Limit your output strictly to the contents of the file, like
    this: ```complete contents of file```.'
  'OUTPUT_CHECK_PROMPT': ' Examine the following out put and determine if 1. The output
    is complete and 2. The output is limited strictly to the contents of a file. Format
    your response exactly like this: ```is_limited_to_file_contents:[1/0],is_complete:[1/0]```.'


'self-help':
  # A monkey for generating help scripts for `monk` entities

  'WORK_PATH': "ROOT_PATH/pack/commands/internal"
  'FILE_TYPES_INCLUDED': ".py"
  'FILEPATH_MATCH_EXCLUDED': "help.py,__init__.py"
  'FILE_SELECT_MAX_TOKENS': 3000
  'MAX_TOKENS': 4000
  'SPECIAL_FILE_PATH': '~/local-git/code-monkeys/self-help-special-file.md'

  'MAIN_PROMPT': 'Write a python script that prints an appealing summary of the {the-file} scripts and its usage via `monk {the-file}`, in the style of documentation for a CLI command. Rather than writing a script using similar functionality as {the-file}, use the provided monk command context and print_t function to generate a script that prints a help summary for {the-file}.'
  'SUMMARY_PROMPT': null  # SPECIAL_FILE is pre-prepared summary
  'MAIN_PROMPT_ULTIMATUM': 'Return only the contents of script that prints a helpful summary and usage explanation of {the-file}.'

  'OUTPUT_EXAMPLE_PROMPT': "Make your output exactly like this with absolutely no additional content: <requested-file-content>."
  'CHECK_OUTPUT': True
  'OUTPUT_CHECK_PROMPT': 'Examine the following output and determine if it contains the contents of a python script. Respond with only one word: "True" or "False".'
#  'OUTPUT_PATH': "ROOT_PATH/storage/custom/default_work_path/output"  # default
  'OUTPUT_EXT': '.py'
  'OUTPUT_FILENAME_APPEND': "-help"
  'OUTPUT_TRIES_LIMIT': 2
  'OUTPUT_REMOVE_STRINGS': "```,```python"
  'SKIP_EXISTING_OUTPUT_FILES': True

  'MAIN_MODEL': 4
  'SUMMARY_MODEL': null  # SPECIAL_FILE is pre-prepared summary
  'OUTPUT_CHECK_MODEL': 3

  'MAIN_TEMP': 1.0
  'SUMMARY_TEMP': null  # SPECIAL_FILE is pre-prepared summary
  'OUTPUT_CHECK_TEMP': .5